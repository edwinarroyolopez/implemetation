{"version":3,"file":"static/webpack/static/development/pages/slider-multiple-axis.js.d3ad5cde7065653dc4f8.hot-update.js","sources":["webpack:///./pages/slider-multiple-axis.js"],"sourcesContent":["import { Slider, Rail, Handles, Tracks, Ticks } from 'react-compound-slider'\n\nfunction Tick({ tick, count }) {  // your own tick component\n  return (\n    <div>\n      <div\n        style={{\n          position: 'absolute',\n          marginTop: 52,\n          marginLeft: -0.5,\n          width: 1,\n          height: 8,\n          backgroundColor: 'silver',\n          left: `${tick.percent}%`,\n        }}\n      />\n      <div\n        style={{\n          position: 'absolute',\n          marginTop: 60,\n          fontSize: 10,\n          textAlign: 'center',\n          marginLeft: `${-(100 / count) / 2}%`,\n          width: `${100 / count}%`,\n          left: `${tick.percent}%`,\n        }}\n      >\n        {tick.value}\n      </div>\n    </div>\n  )\n}\n\nfunction Track({ source, target, getTrackProps }) { // your own track component\n    return (\n      <div\n        style={{\n          position: 'absolute',\n          height: 10,\n          zIndex: 1,\n          marginTop: 35,\n          backgroundColor: '#546C91',\n          borderRadius: 5,\n          cursor: 'pointer',\n          left: `${source.percent}%`,\n          width: `${target.percent - source.percent}%`,\n        }}\n        {...getTrackProps()} // this will set up events if you want it to be clickeable (optional)\n      />\n    )\n  }\n\nexport function Handle({ // your handle component\n    handle: { id, value, percent }, \n    getHandleProps\n  }) {\n    return (\n      <div\n        style={{\n          left: `${percent}%`,\n          position: 'absolute',\n          marginLeft: -15,\n          marginTop: 25,\n          zIndex: 2,\n          width: 30,\n          height: 30,\n          border: 0,\n          textAlign: 'center',\n          cursor: 'pointer',\n          borderRadius: '50%',\n          backgroundColor: '#2C4870',\n          color: '#333',\n        }}\n        {...getHandleProps(id)}\n      >\n        <div style={{ fontFamily: 'Roboto', fontSize: 11, marginTop: -35 }}>\n          {value}\n        </div>\n      </div>\n    )\n  }\n\nconst sliderStyle = {  // Give the slider some width\n  position: 'relative',\n  width: '100%',\n  height: 80,\n  border: '1px solid steelblue',\n}\n\nconst railStyle = { \n  position: 'absolute',\n  width: '100%',\n  height: 10,\n  marginTop: 35,\n  borderRadius: 5,\n  backgroundColor: '#8B9CB6',\n}\n\nconst S = () => (\n    <div>\n      <Slider\n          rootStyle={sliderStyle}\n          domain={[0, 1200000]}\n          step={10000}\n          mode={2}\n          values={[400000, 600000]}\n        >\n          <Rail>\n            {({ getRailProps }) => (\n              <div style={railStyle} {...getRailProps()} />\n            )}\n          </Rail>\n          <Handles>\n            {({ handles, getHandleProps }) => (\n              <div className=\"slider-handles\">\n                {handles.map(handle => (\n                  <Handle\n                    key={handle.id}\n                    handle={handle}\n                    getHandleProps={getHandleProps}\n                  />\n                ))}\n              </div>\n            )}\n          </Handles>\n          <Tracks left={false} right={false}>\n            {({ tracks, getTrackProps }) => (\n              <div className=\"slider-tracks\">\n                {tracks.map(({ id, source, target }) => (\n                  <Track\n                    key={id}\n                    source={source}\n                    target={target}\n                    getTrackProps={getTrackProps}\n                  />\n                ))}\n              </div>\n            )}\n          </Tracks>\n          <Ticks values={[0, 100000, 200000, 300000, 1200000]}> \n            {({ ticks }) => (\n              <div className=\"slider-ticks\">\n                {ticks.map(tick => ( \n                  <Tick key={tick.id} tick={tick} count={ticks.length} />\n                ))}\n              </div>\n            )}\n          </Ticks>\n        </Slider>\n    </div>\n)\nexport default S;"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AA1CA;AACA;AAoDA;;;;A","sourceRoot":""}