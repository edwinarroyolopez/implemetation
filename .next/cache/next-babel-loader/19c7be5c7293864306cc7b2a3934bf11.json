{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/var/www/html/implementation/pages/slider-multiple-axis.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Slider, Rail, Handles, Tracks, Ticks } from 'react-compound-slider';\n\nfunction Track({\n  source,\n  target,\n  getTrackProps\n}) {\n  // your own track component\n  return __jsx(\"div\", _extends({\n    style: {\n      position: 'absolute',\n      height: 10,\n      zIndex: 1,\n      marginTop: 35,\n      backgroundColor: '#546C91',\n      borderRadius: 5,\n      cursor: 'pointer',\n      left: `${source.percent}%`,\n      width: `${target.percent - source.percent}%`\n    }\n  }, getTrackProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }));\n}\n\nexport function Handle({\n  // your handle component\n  handle: {\n    id,\n    value,\n    percent\n  },\n  getHandleProps\n}) {\n  return __jsx(\"div\", _extends({\n    style: {\n      left: `${percent}%`,\n      position: 'absolute',\n      marginLeft: -15,\n      marginTop: 25,\n      zIndex: 2,\n      width: 30,\n      height: 30,\n      border: 0,\n      textAlign: 'center',\n      cursor: 'pointer',\n      borderRadius: '50%',\n      backgroundColor: '#2C4870',\n      color: '#333'\n    }\n  }, getHandleProps(id), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    style: {\n      fontFamily: 'Roboto',\n      fontSize: 11,\n      marginTop: -35\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, value));\n}\nconst sliderStyle = {\n  // Give the slider some width\n  position: 'relative',\n  width: '100%',\n  height: 80,\n  border: '1px solid steelblue'\n};\nconst railStyle = {\n  position: 'absolute',\n  width: '100%',\n  height: 10,\n  marginTop: 35,\n  borderRadius: 5,\n  backgroundColor: '#8B9CB6'\n};\n\nconst S = () => __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69\n  },\n  __self: this\n}, __jsx(Slider, {\n  rootStyle: sliderStyle,\n  domain: [0, 1200000],\n  step: 10000,\n  mode: 2,\n  values: [400000, 600000],\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}, __jsx(Rail, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77\n  },\n  __self: this\n}, ({\n  getRailProps\n}) => __jsx(\"div\", _extends({\n  style: railStyle\n}, getRailProps(), {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79\n  },\n  __self: this\n}))), __jsx(Handles, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82\n  },\n  __self: this\n}, ({\n  handles,\n  getHandleProps\n}) => __jsx(\"div\", {\n  className: \"slider-handles\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84\n  },\n  __self: this\n}, handles.map(handle => __jsx(Handle, {\n  key: handle.id,\n  handle: handle,\n  getHandleProps: getHandleProps,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86\n  },\n  __self: this\n})))), __jsx(Tracks, {\n  left: false,\n  right: false,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n}, ({\n  tracks,\n  getTrackProps\n}) => __jsx(\"div\", {\n  className: \"slider-tracks\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97\n  },\n  __self: this\n}, tracks.map(({\n  id,\n  source,\n  target\n}) => __jsx(Track, {\n  key: id,\n  source: source,\n  target: target,\n  getTrackProps: getTrackProps,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99\n  },\n  __self: this\n})))), __jsx(Ticks, {\n  values: [0, 25, 50, 75, 100],\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109\n  },\n  __self: this\n}, \" // pass in an array of values\", ({\n  ticks\n}) => __jsx(\"div\", {\n  className: \"slider-ticks\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111\n  },\n  __self: this\n}, ticks.map(tick => __jsx(Tick, {\n  key: tick.id,\n  tick: tick,\n  count: ticks.length,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113\n  },\n  __self: this\n}))))));\n\nexport default S;","map":{"version":3,"sources":["/var/www/html/implementation/pages/slider-multiple-axis.js"],"names":["Slider","Rail","Handles","Tracks","Ticks","Track","source","target","getTrackProps","position","height","zIndex","marginTop","backgroundColor","borderRadius","cursor","left","percent","width","Handle","handle","id","value","getHandleProps","marginLeft","border","textAlign","color","fontFamily","fontSize","sliderStyle","railStyle","S","getRailProps","handles","map","tracks","ticks","tick","length"],"mappings":"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","sourcesContent":["import { Slider, Rail, Handles, Tracks, Ticks } from 'react-compound-slider'\n\nfunction Track({ source, target, getTrackProps }) { // your own track component\n    return (\n      <div\n        style={{\n          position: 'absolute',\n          height: 10,\n          zIndex: 1,\n          marginTop: 35,\n          backgroundColor: '#546C91',\n          borderRadius: 5,\n          cursor: 'pointer',\n          left: `${source.percent}%`,\n          width: `${target.percent - source.percent}%`,\n        }}\n        {...getTrackProps()} // this will set up events if you want it to be clickeable (optional)\n      />\n    )\n  }\n\nexport function Handle({ // your handle component\n    handle: { id, value, percent }, \n    getHandleProps\n  }) {\n    return (\n      <div\n        style={{\n          left: `${percent}%`,\n          position: 'absolute',\n          marginLeft: -15,\n          marginTop: 25,\n          zIndex: 2,\n          width: 30,\n          height: 30,\n          border: 0,\n          textAlign: 'center',\n          cursor: 'pointer',\n          borderRadius: '50%',\n          backgroundColor: '#2C4870',\n          color: '#333',\n        }}\n        {...getHandleProps(id)}\n      >\n        <div style={{ fontFamily: 'Roboto', fontSize: 11, marginTop: -35 }}>\n          {value}\n        </div>\n      </div>\n    )\n  }\n\nconst sliderStyle = {  // Give the slider some width\n  position: 'relative',\n  width: '100%',\n  height: 80,\n  border: '1px solid steelblue',\n}\n\nconst railStyle = { \n  position: 'absolute',\n  width: '100%',\n  height: 10,\n  marginTop: 35,\n  borderRadius: 5,\n  backgroundColor: '#8B9CB6',\n}\n\nconst S = () => (\n    <div>\n      <Slider\n          rootStyle={sliderStyle}\n          domain={[0, 1200000]}\n          step={10000}\n          mode={2}\n          values={[400000, 600000]}\n        >\n          <Rail>\n            {({ getRailProps }) => (\n              <div style={railStyle} {...getRailProps()} />\n            )}\n          </Rail>\n          <Handles>\n            {({ handles, getHandleProps }) => (\n              <div className=\"slider-handles\">\n                {handles.map(handle => (\n                  <Handle\n                    key={handle.id}\n                    handle={handle}\n                    getHandleProps={getHandleProps}\n                  />\n                ))}\n              </div>\n            )}\n          </Handles>\n          <Tracks left={false} right={false}>\n            {({ tracks, getTrackProps }) => (\n              <div className=\"slider-tracks\">\n                {tracks.map(({ id, source, target }) => (\n                  <Track\n                    key={id}\n                    source={source}\n                    target={target}\n                    getTrackProps={getTrackProps}\n                  />\n                ))}\n              </div>\n            )}\n          </Tracks>\n          <Ticks values={[0, 25, 50, 75, 100]}> // pass in an array of values\n            {({ ticks }) => (\n              <div className=\"slider-ticks\">\n                {ticks.map(tick => ( \n                  <Tick key={tick.id} tick={tick} count={ticks.length} />\n                ))}\n              </div>\n            )}\n          </Ticks>\n        </Slider>\n    </div>\n)\nexport default S;"]},"metadata":{},"sourceType":"module"}